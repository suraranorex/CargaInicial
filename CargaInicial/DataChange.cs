///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PruebaConsola
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DataChange recording.
    /// </summary>
    [TestModule("c5a850a5-923e-41aa-a554-9e7c3fe054c1", ModuleType.Recording, 1)]
    public partial class DataChange : ITestModule
    {
        /// <summary>
        /// Holds an instance of the RepoCargaInicial repository.
        /// </summary>
        public static RepoCargaInicial repo = RepoCargaInicial.Instance;

        static DataChange instance = new DataChange();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DataChange()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DataChange Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            CargaInicial();
            Delay.Milliseconds(0);
            
            VerificaFinal();
            Delay.Milliseconds(0);
            
            RenombrarArchivo();
            Delay.Milliseconds(0);
            
            // Descomentar los 3 primeros códigos y sólo correr esos para probar que se ejecute bien el lanzadorDataChengeCC.bat
            //Report.Log(ReportLevel.Info, "Section", "Descomentar los 3 primeros códigos y sólo correr esos para probar que se ejecute bien el lanzadorDataChengeCC.bat", new RecordItemIndex(3));
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'cd ' with focus on 'CWindowsSystem32CmdExe'.", repo.CWindowsSystem32CmdExe.SelfInfo, new RecordItemIndex(4));
            //repo.CWindowsSystem32CmdExe.Self.EnsureVisible();
            //Keyboard.Press("cd ");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(5));
            //Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{RMenu down}{OemOpenBrackets}{LControlKey up}{RMenu up}{LControlKey up}{Return}' with focus on 'CWindowsSystem32CmdExe'.", repo.CWindowsSystem32CmdExe.SelfInfo, new RecordItemIndex(6));
            //repo.CWindowsSystem32CmdExe.Self.EnsureVisible();
            //Keyboard.Press("{LControlKey down}{RMenu down}{OemOpenBrackets}{LControlKey up}{RMenu up}{LControlKey up}{Return}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(7));
            //Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'cd Carga_Inicial_QA\\Localidades\\admin\\bin'.", new RecordItemIndex(8));
            //Keyboard.Press("cd Carga_Inicial_QA\\Localidades\\admin\\bin");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(9));
            //Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(10));
            //Keyboard.Press("{Return}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(11));
            //Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'data_change.bat -description \"Auth_Sura\" -edit REFID_001 -server https://suragwqa2.segurossura.com.ar/cc -gosu C:\\Carga_Inicial_QA\\Localidades\\admin\\bin\\cc\\auth_rol_users_sura_update_v2 -user su -password gw' with focus on 'CWindowsSystem32CmdExe'.", repo.CWindowsSystem32CmdExe.SelfInfo, new RecordItemIndex(12));
            //repo.CWindowsSystem32CmdExe.Self.EnsureVisible();
            //Keyboard.Press("data_change.bat -description \"Auth_Sura\" -edit REFID_001 -server https://suragwqa2.segurossura.com.ar/cc -gosu C:\\Carga_Inicial_QA\\Localidades\\admin\\bin\\cc\\auth_rol_users_sura_update_v2 -user su -password gw");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(13));
            //Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(14));
            //Keyboard.Press("{Return}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(15));
            //Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'dir{Return}'.", new RecordItemIndex(16));
            //Keyboard.Press("dir{Return}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(17));
            //Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
